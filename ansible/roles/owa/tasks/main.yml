---
# These tasks are meant to be run as the `owa_deploy_user`.
- name: sclang conf dir
  file:
    path: "/home/{{ owa_deploy_user }}/.config/SuperCollider/"
    state: directory

- name: sclang conf
  copy:
    src: sclang_conf.yaml
    dest: "/home/{{ owa_deploy_user }}/.config/SuperCollider/sclang_conf.yaml"

- name: arduino IDE setup
  shell: /opt/arduino/arduino-1.8.5/arduino --install-boards "arduino:avr"
  args:
    creates: "/home/{{ owa_deploy_user }}/.arduino15/packages/arduino/hardware/avr"
  register: arduino_install_boards
  failed_when: 'arduino_install_boards.rc != 0 and "Platform is already installed!" not in arduino_install_boards.stderr'
  tags:
    - install

- name: update code
  git:
    repo: https://github.com/awakeningio/owa.git
    dest: "{{ owa_project_dir }}"
    clone: yes
    update: yes
    recursive: yes
  register: owa_git
  tags:
    - deploy_code

- name: arduino upload script
  template:
    src: upload_arduino.sh.j2
    dest: "{{ owa_project_dir }}/arduino/upload_arduino.sh"
  tags:
    - install

- name: yarn
  yarn:
    path: "{{ owa_project_dir }}"
  when: owa_git.changed
  tags:
    - deploy_code

- name: update sc deps
  shell: sclang install.sc
  when: owa_git.changed
  args:
    chdir: "{{owa_project_dir}}"
  tags:
    - deploy_code

- name: owa environment
  template:
    src: owa_env.j2
    dest: "{{ owa_project_dir }}/owa_env"

- name: .supercollider.yaml for supercolliderjs
  copy:
    src: .supercollider.yaml
    dest: "{{ owa_project_dir }}/.supercollider.yaml"

- name: sync sounds
  synchronize:
    dest: "{{ owa_project_dir }}/"
    src: "{{ local_owa_sounds_dir }}"
    times: yes
    delete: yes
    rsync_opts:
      - "--exclude=*.asd --exclude=*.pkf"

- name: run a build
  shell: npm run build
  when: owa_git.changed
  args:
    chdir: "{{ owa_project_dir }}"
  tags:
    - deploy_code
