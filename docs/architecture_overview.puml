@startuml
!include styles.puml

namespace nodejs.owa {
  class OWAController {
    Top level entity for controlling everything.
    Entry point, starts all sub-controllers.
    \n
    Main state store for OWA app
    redux.Store owaStore
    \n
    A separate redux state store for the Ableton Link state.  It changes
    very frequently and thus does not need to be in the same store.
    redux.Store linkStore

    inputController
    soundController
  }
  OWAController *-- redux.Store

  class GUIInputController {
    
    Converts messages from gui UI into
    dispatched actions.

    oscActionListener
    store
  }
  OWAController o-- GUIInputController
  GUI_OSC_IN ()-- GUIInputController
  GUIInputController *-- OSCActionListener
  GUIInputController *-- redux.Store
  
  /'class ArduinoInputController {'/
    /'Converts arduino inputs to dispatched actions.'/

    /'serialport.SerialPort arduinoPort'/
    /'..'/
    /'+ handleButtonMessage(data)'/
  /'}'/
  /'OWAController o-- ArduinoInputController'/
  class OSCActionListener {
    Forward actions from osc.js to a redux state store.

    store
    oscSocket
  }
  OSCActionListener *-- redux.Store

  class AbletonLinkController {
    Creates an Ableton Link client and forwards the state to the
    store.

    linkStore
  }
  OWAController *-- AbletonLinkController
  AbletonLinkController *-- redux.Store

  class SoundController {
    Forwards state changes to SuperCollider and forwards dispatches from SC
    to the store.

    OSCActionListener actionListener
    store
    linkStore
  }
  OWAController *-- SoundController
  SoundController *-- OSCActionListener
  SoundController *-- redux.Store
  SoundController "owa.api" -down-> quarks.owa.OWAController

  /'class OSCActionDispatcher {'/
    /'redux middleware to dispatch actions via osc.js'/

    /'oscSocket'/
  /'}'/

  namespace gui {
    class OWAUIApp {
      Entry point for the GUI
    }
    OWAUIApp "GUI_OSC_IN" --> nodejs.owa.GUIInputController
  }

}

namespace quarks.owa {
  class OWAController {
    StateStore owaStateStore
    StateStore linkStateStore
    SessionTimingController sessionTimingController
    ReduxAbletonTempoClockController clockController
  }
  OWAController *-- quarks.supercollider_redux.StateStore
  OWAController *-- quarks.supercollider_redux.ReduxAbletonTempoClockController
  /' 'TOOD: get rid of owa.api '/
  owa.api ()- OWAController

  class SessionTimingController {
    Handles scheduling the timing to transition phases (when?, can this be in reducers too ?)
    
    ReduxAbletonTempoClockController clockController
    StateStore linkStore
  }
  OWAController *-- SessionTimingController
  SessionTimingController *-- quarks.supercollider_redux.ReduxAbletonTempoClockController
  SessionTimingController *-- quarks.supercollider_redux.StateStore
}


@enduml
